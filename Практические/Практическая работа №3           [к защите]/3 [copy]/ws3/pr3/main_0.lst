

HI-TECH Software 8051 Macro Assembler V9.60                                Page 1
                                                       Wed Mar 05 20:15:44 2025

     1                           	psect	idata,class=DATA,space=1,limit=080h
     2                           	psect	irdata,class=DATA,limit=080h
     3                           	global	_main
     4                           	signat	_main,88
     5                           	global	stack_internal
     6                           	psect	text,class=CODE
     7                           	psect	text
     8                           	file	"D:\MS11ws\3\ws3\pr3\main.c"
     9                           	line	35
    10  00114                     _main:
    11  00114  80 0D              	j	f1481
    12  00116                     f1480:
    13                           ;main.c: 35: void main(void) {
    14                           
    15                           ;main.c: 52: dispInit();
    16                           
    17                           	global	_dispInit
    18                           	signat	_dispInit,88
    19                           	FNCALL	_main,_dispInit
    20                           	line	52
    21  00116  12 0125            	lcall	_dispInit
    22                           ;main.c: 53: dispAnimate ("your mother on sale")
                                 ;
    23                           
    24                           	global	_dispAnimate
    25                           	signat	_dispAnimate,4216
    26                           	FNCALL	_main,_dispAnimate
    27                           	line	53
    28  00119  7C 01              	mov	r4,#high (0+u19)
    29  0011B  7D 00              	mov	r5,#low (0+u19)
    30  0011D  12 0193            	lcall	_dispAnimate
    31                           
    32                           ;main.c: 54: while(1);
    33                           
    34                           	line	54
    35  00120                     l5:
    36  00120                     l4:
    37  00120  80 FE              	jmp	l5
    38  00122                     l6:
    39                           ;main.c: 55: }
    40                           
    41                           	line	55
    42  00122                     l3:
    43  00122  22                 	ret
    44  00123                     f1481:
    45  00123  80 F1              	j	f1480
    46  0000                     f1482	equ	0
    47                           	line	57
    48  00125                     _dispInit:
    49  00125  80 2D              	j	f1511
    50  00127                     f1510:
    51                           ;main.c: 57: void dispInit() {
    52                           
    53                           ;main.c: 59: dispComm.Clear = 0x01;
    54                           
    55                           	global	_dispComm
    56                           	line	59
    57  00127  75 22  01          	mov	_dispComm,#1
    58                           ;main.c: 60: dispComm.MoveStart = 0x02;
    59                           
    60                           	line	60
    61  0012A  75 25  02          	mov	0+_dispComm+03h,#2
    62                           ;main.c: 61: dispComm.Off = 0x08;
    63                           
    64                           	line	61
    65  0012D  75 23  08          	mov	0+_dispComm+01h,#8
    66                           ;main.c: 62: dispComm.On = 0x0E;
    67                           
    68                           	line	62
    69  00130  75 24  0E          	mov	0+_dispComm+02h,#14
    70                           ;main.c: 63: dispComm.MoveLeft = 0x04;
    71                           
    72                           	line	63
    73  00133  75 26  04          	mov	0+_dispComm+04h,#4
    74                           ;main.c: 64: dispComm.MoveRight = 0x06;
    75                           
    76                           	line	64
    77  00136  75 27  06          	mov	0+_dispComm+05h,#6
    78                           ;main.c: 65: dispComm.MoveStartOf1 = 0x80;
    79                           
    80                           	line	65
    81  00139  75 28  80          	mov	0+_dispComm+06h,#128
    82                           ;main.c: 66: dispComm.MoveStartOf2 = 0xC0;
    83                           
    84                           	line	66
    85  0013C  75 29  C0          	mov	0+_dispComm+07h,#192
    86                           ;main.c: 67: dispComm.MovePos1Of2 = 0xC1;
    87                           
    88                           	line	67
    89  0013F  75 2A  C1          	mov	0+_dispComm+08h,#193
    90                           ;main.c: 68: dispComm.MovePos3Of1 = 0x83;
    91                           
    92                           	line	68
    93  00142  75 2B  83          	mov	0+_dispComm+09h,#131
    94                           ;main.c: 69: dispComm.Mode8bit = 0x38;
    95                           
    96                           	line	69
    97  00145  75 2C  38          	mov	0+_dispComm+0Ah,#56
    98                           ;main.c: 71: dispRW = 0;
    99                           
   100                           	line	71
   101  00148  C2 87              	clr	p0.7
   102                           ;main.c: 72: dispRS = 1;
   103                           
   104                           	line	72
   105  0014A  D2 86              	setb	p0.6
   106                           ;main.c: 73: dispE = 1;
   107                           
   108                           	line	73
   109  0014C  D2 85              	setb	p0.5
   110                           ;main.c: 74: dispExecute (dispComm.Clear);
   111                           
   112                           	global	_dispExecute
   113                           	signat	_dispExecute,4216
   114                           	FNCALL	_dispInit,_dispExecute
   115                           	line	74
   116  0014E  AD 22              	mov	r5,_dispComm
   117  00150  12 0184            	lcall	_dispExecute
   118                           
   119                           ;main.c: 76: }
   120                           
   121                           	line	76
   122  00153                     l7:
   123  00153  22                 	ret
   124  00154                     f1511:
   125  00154  80 D1              	j	f1510
   126  0000                     f1512	equ	0
   127                           ;	param _inp assigned to r5 on entry
   128                           	global	_dispWrite
   129                           	signat	_dispWrite,4216
   130                           	line	77
   131  00156                     _dispWrite:
   132  00156  80 0B              	j	f1531
   133  00158                     f1530:
   134                           ;main.c: 77: void dispWrite (unsigned char inp) 
                                 {
   135                           
   136                           ;main.c: 78: dispRS = 1;
   137                           
   138                           	line	78
   139  00158  D2 86              	setb	p0.6
   140                           ;main.c: 79: dispRW = 0;
   141                           
   142                           	line	79
   143  0015A  C2 87              	clr	p0.7
   144                           ;main.c: 80: dispData = inp;
   145                           
   146                           	line	80
   147  0015C  8D A0              	mov	0A0h,r5
   148                           ;main.c: 81: dispE = 1;
   149                           
   150                           	line	81
   151  0015E  D2 85              	setb	p0.5
   152                           ;main.c: 82: dispE = 0;
   153                           
   154                           	line	82
   155  00160  C2 85              	clr	p0.5
   156                           ;main.c: 83: }
   157                           
   158                           	line	83
   159  00162                     l8:
   160  00162  22                 	ret
   161  00163                     f1531:
   162  00163  80 F3              	j	f1530
   163  0000                     f1532	equ	0
   164                           ;	param _inp assigned to r4/r5 on entry
   165                           	global	_dispWriteLine
   166                           	signat	_dispWriteLine,4216
   167                           	line	84
   168  00165                     _dispWriteLine:
   169  00165  80 1B              	j	f1541
   170  00167                     f1540:
   171                           ;main.c: 84: void dispWriteLine (unsigned char* 
                                 inp) {
   172                           
   173                           ;	var   _length assigned to ?a_dispWriteLine+0
   174                           ;main.c: 85: int length = strlen(inp);
   175                           
   176                           	global	_strlen
   177                           	signat	_strlen,4218
   178                           	FNCALL	_dispWriteLine,_strlen
   179                           ;	var   _inp assigned to ?a_dispWriteLine+2
   180                           ;_inp stored from WR2
   181                           	line	85
   182  00167  8C 2F              	mov	?a_dispWriteLine+2,r4
   183  00169  8D 30              	mov	?a_dispWriteLine+2+1,r5
   184  0016B  AC 2F              	mov	r4,?a_dispWriteLine+2
   185  0016D  AD 30              	mov	r5,?a_dispWriteLine+2+1
   186  0016F  12 00C3            	lcall	_strlen
   187                           
   188  00172  8A 2D              	mov	?a_dispWriteLine+0,r2
   189  00174  8B 2E              	mov	?a_dispWriteLine+0+1,r3
   190                           ;	var   _in assigned to ?a_dispWriteLine+4
   191                           ;main.c: 86: unsigned char in[79];
   192                           
   193                           ;main.c: 87: strcpy (in, inp);
   194                           
   195                           	global	_strcpy
   196                           	signat	_strcpy,8314
   197                           	FNCALL	_dispWriteLine,_strcpy
   198                           	line	87
   199  00176  AA 2F              	mov	r2,?a_dispWriteLine+2
   200  00178  AB 30              	mov	r3,?a_dispWriteLine+2+1
   201  0017A  7C 00              	mov	r4,#high (?a_dispWriteLine+4)
   202  0017C  7D 31              	mov	r5,#low (?a_dispWriteLine+4)
   203  0017E  12 02EE            	lcall	_strcpy
   204                           
   205                           ;main.c: 88: }
   206                           
   207                           	line	88
   208  00181                     l9:
   209  00181  22                 	ret
   210  00182                     f1541:
   211  00182  80 E3              	j	f1540
   212                           	FNSIZE	_dispWriteLine,83,0
   213                           	global	?a_dispWriteLine
   214  0000                     f1542	equ	0
   215                           ;	param _command assigned to r5 on entry
   216                           	line	89
   217  00184                     _dispExecute:
   218  00184  80 0B              	j	f1571
   219  00186                     f1570:
   220                           ;main.c: 89: void dispExecute (unsigned char com
                                 mand) {
   221                           
   222                           ;main.c: 90: dispRS = 0;
   223                           
   224                           	line	90
   225  00186  C2 86              	clr	p0.6
   226                           ;main.c: 91: dispRW = 0;
   227                           
   228                           	line	91
   229  00188  C2 87              	clr	p0.7
   230                           ;main.c: 92: dispData = command;
   231                           
   232                           	line	92
   233  0018A  8D A0              	mov	0A0h,r5
   234                           ;main.c: 93: dispE = 1;
   235                           
   236                           	line	93
   237  0018C  D2 85              	setb	p0.5
   238                           ;main.c: 94: dispE = 0;
   239                           
   240                           	line	94
   241  0018E  C2 85              	clr	p0.5
   242                           ;main.c: 95: }
   243                           
   244                           	line	95
   245  00190                     l10:
   246  00190  22                 	ret
   247  00191                     f1571:
   248  00191  80 F3              	j	f1570
   249  0000                     f1572	equ	0
   250                           ;	param _inp assigned to r4/r5 on entry
   251                           	line	96
   252  00193                     _dispAnimate:
   253  00193  02 0278            	j	f1581
   254  00196                     f1580:
   255                           ;main.c: 96: void dispAnimate (unsigned char* in
                                 p) {
   256                           
   257                           ;	var   _length assigned to ?a_dispAnimate+0
   258                           ;main.c: 97: int length = strlen(inp);
   259                           
   260                           	FNCALL	_dispAnimate,_strlen
   261                           ;	var   _inp assigned to ?a_dispAnimate+2
   262                           ;_inp stored from WR2
   263                           	line	97
   264  00196  8C 2F              	mov	?a_dispAnimate+2,r4
   265  00198  8D 30              	mov	?a_dispAnimate+2+1,r5
   266  0019A  AC 2F              	mov	r4,?a_dispAnimate+2
   267  0019C  AD 30              	mov	r5,?a_dispAnimate+2+1
   268  0019E  12 00C3            	lcall	_strlen
   269                           
   270  001A1  8A 2D              	mov	?a_dispAnimate+0,r2
   271  001A3  8B 2E              	mov	?a_dispAnimate+0+1,r3
   272                           ;	var   _curr assigned to ?a_dispAnimate+4
   273                           ;main.c: 98: int curr = 0;
   274                           
   275                           	line	98
   276  001A5  E4                 	clr	a
   277  001A6  F5 31              	mov	?a_dispAnimate+4,a
   278  001A8  F5 32              	mov	?a_dispAnimate+4+1,a
   279                           ;	var   _in assigned to ?a_dispAnimate+6
   280                           ;main.c: 99: unsigned char in[30];
   281                           
   282                           ;main.c: 100: strcpy (in, inp);
   283                           
   284                           	FNCALL	_dispAnimate,_strcpy
   285                           	line	100
   286  001AA  AA 2F              	mov	r2,?a_dispAnimate+2
   287  001AC  AB 30              	mov	r3,?a_dispAnimate+2+1
   288  001AE  7C 00              	mov	r4,#high (?a_dispAnimate+6)
   289  001B0  7D 33              	mov	r5,#low (?a_dispAnimate+6)
   290  001B2  12 02EE            	lcall	_strcpy
   291                           
   292                           ;main.c: 101: dispExecute (dispComm.Clear);
   293                           
   294                           	FNCALL	_dispAnimate,_dispExecute
   295                           	line	101
   296  001B5  AD 22              	mov	r5,_dispComm
   297  001B7  12 0184            	lcall	_dispExecute
   298                           
   299                           ;main.c: 102: dispExecute (dispComm.MoveStartOf2
                                 );
   300                           
   301                           	line	102
   302  001BA  AD 29              	mov	r5,0+_dispComm+07h
   303  001BC  12 0184            	lcall	_dispExecute
   304                           
   305                           ;main.c: 103: dispExecute (dispComm.MoveStartOf1
                                 );
   306                           
   307                           	line	103
   308  001BF  AD 28              	mov	r5,0+_dispComm+06h
   309  001C1  12 0184            	lcall	_dispExecute
   310                           
   311                           ;main.c: 104: dispRS = 1;
   312                           
   313                           	line	104
   314  001C4  D2 86              	setb	p0.6
   315                           ;main.c: 105: dispRW = 0;
   316                           
   317                           	line	105
   318  001C6  C2 87              	clr	p0.7
   319                           ;main.c: 106: while (1) {
   320                           
   321                           	line	106
   322  001C8                     l13:
   323                           ;main.c: 107: dispExecute (dispComm.Clear);
   324                           
   325                           	line	107
   326  001C8  AD 22              	mov	r5,_dispComm
   327  001CA  12 0184            	lcall	_dispExecute
   328                           
   329                           ;main.c: 108: for (i = 0; i < 8; i++) {
   330                           
   331                           	global	_i
   332                           	line	108
   333  001CD  E4                 	clr	a
   334  001CE  F5 20              	mov	_i,a
   335  001D0  F5 21              	mov	_i+1,a
   336  001D2  02 025B            	jmp	l18
   337  001D5                     l15:
   338                           ;main.c: 109: if (curr % (8 + 2) >= 8 || i <= cu
                                 rr) {
   339                           
   340                           	line	109
   341  001D5  7C 00              	mov	r4,#high (10)
   342  001D7  7D 0A              	mov	r5,#low (10)
   343  001D9  AA 31              	mov	r2,?a_dispAnimate+4
   344  001DB  AB 32              	mov	r3,?a_dispAnimate+4+1
   345                           	global	awmod
   346  001DD  12 008B            	lcall	awmod
   347  001E0  EB                 	mov	a,r3
   348  001E1  24 F8              	add	a,#low -(8)
   349  001E3  EA                 	mov	a,r2
   350  001E4  64 80              	xrl	a,#80h
   351  001E6  34 7F              	addc	a,#(high -(8))xor 80h
   352  001E8  50 02              	bnc	u11
   353  001EA  80 15              	jmp	u10
   354  001EC                     u11:
   355  001EC  C3                 	clr	c
   356  001ED  E5 32              	mov	a,?a_dispAnimate+4+1
   357  001EF  95 21              	subb	a,_i+1
   358  001F1  85 20  F0          	mov	b,_i
   359  001F4  63 F0 80           	xrl	b,#80h
   360  001F7  E5 31              	mov	a,?a_dispAnimate+4
   361  001F9  64 80              	xrl	a,#80h
   362  001FB  95 F0              	subb	a,b
   363  001FD  40 04              	bc	u21
   364  001FF  80 00              	jmp	u20
   365  00201                     u10:
   366  00201                     u20:
   367  00201  80 04              	jmp	u30
   368  00203                     u21:
   369  00203  80 00              	jmp	u31
   370  00205                     u31:
   371  00205  80 47              	jmp	l19
   372  00207                     u30:
   373                           ;main.c: 110: if (i > length)
   374                           
   375                           	line	110
   376  00207  C3                 	clr	c
   377  00208  E5 2E              	mov	a,?a_dispAnimate+0+1
   378  0020A  95 21              	subb	a,_i+1
   379  0020C  85 20  F0          	mov	b,_i
   380  0020F  63 F0 80           	xrl	b,#80h
   381  00212  E5 2D              	mov	a,?a_dispAnimate+0
   382  00214  64 80              	xrl	a,#80h
   383  00216  95 F0              	subb	a,b
   384  00218  50 02              	bnc	u41
   385  0021A  80 02              	jmp	u40
   386  0021C                     u41:
   387  0021C  80 07              	jmp	l20
   388  0021E                     u40:
   389                           ;main.c: 111: dispWrite(' ');
   390                           
   391                           	FNCALL	_dispAnimate,_dispWrite
   392                           	line	111
   393  0021E  7D 20              	mov	r5,#32
   394  00220  12 0156            	lcall	_dispWrite
   395                           
   396  00223  80 27              	jmp	l21
   397                           	line	112
   398  00225                     l20:
   399                           ;main.c: 112: else
   400                           
   401                           ;main.c: 113: dispWrite(in[length - curr % (8 + 
                                 2) - 1 + i]);
   402                           
   403                           	line	113
   404  00225  7C 00              	mov	r4,#high (10)
   405  00227  7D 0A              	mov	r5,#low (10)
   406  00229  AA 31              	mov	r2,?a_dispAnimate+4
   407  0022B  AB 32              	mov	r3,?a_dispAnimate+4+1
   408                           	global	awmod
   409  0022D  12 008B            	lcall	awmod
   410  00230  E5 2E              	mov	a,?a_dispAnimate+0+1
   411  00232  C3                 	clr	c
   412  00233  9B                 	subb	a,r3
   413  00234  FD                 	mov	r5,a
   414  00235  E5 2D              	mov	a,?a_dispAnimate+0
   415  00237  9A                 	subb	a,r2
   416  00238  FC                 	mov	r4,a
   417  00239  ED                 	mov	a,r5
   418  0023A  25 21              	add	a,_i+1
   419  0023C  FD                 	mov	r5,a
   420  0023D  EC                 	mov	a,r4
   421  0023E  35 20              	addc	a,_i
   422  00240  FC                 	mov	r4,a
   423  00241  74 33              	mov	a,#?a_dispAnimate+6
   424  00243  2D                 	add	a,r5
   425  00244  24 FF              	add	a,#0FFh
   426  00246  F9                 	mov	r1,a
   427  00247  87 05              	mov	5+0,@r1
   428  00249  12 0156            	lcall	_dispWrite
   429                           
   430  0024C                     l21:
   431                           ;main.c: 114: }
   432                           
   433                           	line	114
   434  0024C  80 05              	jmp	l22
   435                           	line	115
   436  0024E                     l19:
   437                           ;main.c: 115: else
   438                           
   439                           ;main.c: 116: dispWrite(' ');
   440                           
   441                           	line	116
   442  0024E  7D 20              	mov	r5,#32
   443  00250  12 0156            	lcall	_dispWrite
   444                           
   445  00253                     l22:
   446                           	line	108
   447  00253  05 21              	inc	_i+1
   448  00255  E5 21              	mov	a,_i+1
   449  00257  70 02              	jnz	u50
   450  00259  05 20              	inc	_i
   451  0025B                     u50:
   452  0025B                     l18:
   453  0025B  E5 21              	mov	a,_i+1
   454  0025D  24 F8              	add	a,#low -(8)
   455  0025F  E5 20              	mov	a,_i
   456  00261  64 80              	xrl	a,#80h
   457  00263  34 7F              	addc	a,#(high -(8))xor 80h
   458  00265  50 02              	bnc	u61
   459  00267  80 03              	jmp	u60
   460  00269                     u61:
   461  00269  02 01D5            	jmp	l15
   462  0026C                     u60:
   463  0026C                     l16:
   464                           ;main.c: 117: }
   465                           
   466                           ;main.c: 118: curr++;
   467                           
   468                           	line	118
   469  0026C  05 32              	inc	?a_dispAnimate+4+1
   470  0026E  E5 32              	mov	a,?a_dispAnimate+4+1
   471  00270  70 02              	jnz	u70
   472  00272  05 31              	inc	?a_dispAnimate+4
   473  00274                     u70:
   474                           	line	124
   475  00274                     l12:
   476                           	line	106
   477  00274  02 01C8            	jmp	l13
   478  00277                     l14:
   479                           ;main.c: 124: }
   480                           
   481                           ;main.c: 126: }
   482                           
   483                           	line	126
   484  00277                     l11:
   485  00277  22                 	ret
   486  00278                     f1581:
   487  00278  02 0196            	j	f1580
   488                           	FNSIZE	_dispAnimate,36,0
   489                           	global	?a_dispAnimate
   490  0000                     f1582	equ	0
   491                           	psect	strings,class=CODE
   492                           	psect	strings
   493  00100                     u19:
   494  00100  79 6F 75 72 20 6D  	db	"your mother on sale",0
              6F 74 68 65 72 20  
              6F 6E 20 73 61 6C  
              65 00              
   495  0000                     _A10	equ	162
   496  0000                     _A11	equ	163
   497  0000                     _A12	equ	164
   498  0000                     _A13	equ	165
   499  0000                     _A14	equ	166
   500  0000                     _A15	equ	167
   501  0000                     _A8	equ	160
   502  0000                     _A9	equ	161
   503  0000                     _AC	equ	214
   504  0000                     _ACC0	equ	224
   505  0000                     _ACC1	equ	225
   506  0000                     _ACC2	equ	226
   507  0000                     _ACC3	equ	227
   508  0000                     _ACC4	equ	228
   509  0000                     _ACC5	equ	229
   510  0000                     _ACC6	equ	230
   511  0000                     _ACC7	equ	231
   512  0000                     _AD0	equ	128
   513  0000                     _AD1	equ	129
   514  0000                     _AD2	equ	130
   515  0000                     _AD3	equ	131
   516  0000                     _AD4	equ	132
   517  0000                     _AD5	equ	133
   518  0000                     _AD6	equ	134
   519  0000                     _AD7	equ	135
   520  0000                     _B0	equ	240
   521  0000                     _B1	equ	241
   522  0000                     _B2	equ	242
   523  0000                     _B3	equ	243
   524  0000                     _B4	equ	244
   525  0000                     _B5	equ	245
   526  0000                     _B6	equ	246
   527  0000                     _B7	equ	247
   528  0000                     _CY	equ	215
   529  0000                     _EA	equ	175
   530  0000                     _ES	equ	172
   531  0000                     _ET0	equ	169
   532  0000                     _ET1	equ	171
   533  0000                     _EX0	equ	168
   534  0000                     _EX1	equ	170
   535  0000                     _F0	equ	213
   536  0000                     _IE0	equ	137
   537  0000                     _IE1	equ	139
   538  0000                     _INT0	equ	178
   539  0000                     _INT1	equ	179
   540  0000                     _IT0	equ	136
   541  0000                     _IT1	equ	138
   542  0000                     _OV	equ	210
   543  0000                     _P	equ	208
   544  0000                     _P00	equ	128
   545  0000                     _P01	equ	129
   546  0000                     _P02	equ	130
   547  0000                     _P03	equ	131
   548  0000                     _P04	equ	132
   549  0000                     _P05	equ	133
   550  0000                     _P06	equ	134
   551  0000                     _P07	equ	135
   552  0000                     _P10	equ	144
   553  0000                     _P11	equ	145
   554  0000                     _P12	equ	146
   555  0000                     _P13	equ	147
   556  0000                     _P14	equ	148
   557  0000                     _P15	equ	149
   558  0000                     _P16	equ	150
   559  0000                     _P17	equ	151
   560  0000                     _P20	equ	160
   561  0000                     _P21	equ	161
   562  0000                     _P22	equ	162
   563  0000                     _P23	equ	163
   564  0000                     _P24	equ	164
   565  0000                     _P25	equ	165
   566  0000                     _P26	equ	166
   567  0000                     _P27	equ	167
   568  0000                     _P30	equ	176
   569  0000                     _P31	equ	177
   570  0000                     _P32	equ	178
   571  0000                     _P33	equ	179
   572  0000                     _P34	equ	180
   573  0000                     _P35	equ	181
   574  0000                     _P36	equ	182
   575  0000                     _P37	equ	183
   576  0000                     _PS	equ	188
   577  0000                     _PT0	equ	185
   578  0000                     _PT1	equ	187
   579  0000                     _PX0	equ	184
   580  0000                     _PX1	equ	186
   581  0000                     _RB8	equ	154
   582  0000                     _RD	equ	183
   583  0000                     _REN	equ	156
   584  0000                     _RI	equ	152
   585  0000                     _RS0	equ	211
   586  0000                     _RS1	equ	212
   587  0000                     _RXD	equ	176
   588  0000                     _SM0	equ	159
   589  0000                     _SM1	equ	158
   590  0000                     _SM2	equ	157
   591  0000                     _T0	equ	180
   592  0000                     _T1	equ	181
   593  0000                     _TB8	equ	155
   594  0000                     _TF0	equ	141
   595  0000                     _TF1	equ	143
   596  0000                     _TI	equ	153
   597  0000                     _TR0	equ	140
   598  0000                     _TR1	equ	142
   599  0000                     _TXD	equ	177
   600  0000                     _WR	equ	182
   601  0000                     _dispE	equ	133
   602  0000                     _dispRS	equ	134
   603  0000                     _dispRW	equ	135
   604  0000                     _interr	equ	128
   605  0000                     _ACC	equ	224
   606  0000                     _B	equ	240
   607  0000                     _DPH	equ	131
   608  0000                     _DPL	equ	130
   609  0000                     _IE	equ	168
   610  0000                     _IP	equ	184
   611  0000                     _P0	equ	128
   612  0000                     _P1	equ	144
   613  0000                     _P2	equ	160
   614  0000                     _P3	equ	176
   615  0000                     _PCON	equ	135
   616  0000                     _PSW	equ	208
   617  0000                     _SBUF	equ	153
   618  0000                     _SCON	equ	152
   619  0000                     _SP	equ	129
   620  0000                     _TCON	equ	136
   621  0000                     _TH0	equ	140
   622  0000                     _TH1	equ	141
   623  0000                     _TL0	equ	138
   624  0000                     _TL1	equ	139
   625  0000                     _TMOD	equ	137
   626  0000                     _dispData	equ	160
   627  0000                     _ACC_BITS	equ	224
   628  0000                     _B_BITS	equ	240
   629  0000                     _IE_BITS	equ	168
   630  0000                     _IP_BITS	equ	184
   631  0000                     _P0_BITS	equ	128
   632  0000                     _P1_BITS	equ	144
   633  0000                     _P2_BITS	equ	160
   634  0000                     _P3_BITS	equ	176
   635  0000                     _PCON_BITS	equ	135
   636  0000                     _PSW_BITS	equ	208
   637  0000                     _SCON_BITS	equ	152
   638  0000                     _TCON_BITS	equ	136
   639  0000                     _TMOD_BITS	equ	137
   640                           	psect	rbss,class=DATA,space=1
   641                           	psect	rbss
   642                           	global	_i
   643  00020                     _i:
   644  00020                     	ds	2
   645                           	global	_dispComm
   646  00022                     _dispComm:
   647  00022                     	ds	11


HI-TECH Software 8051 Macro Assembler V9.60                                Page 2
Symbol Table                                           Wed Mar 05 20:15:44 2025

              _B 000F0                l3 00122                l4 00120  
              l5 00120                _P 000D0                l6 00122  
              l7 00153                l8 00162                l9 00181  
              _i 00020         _dispData 000A0               _B0 000F0  
             _B1 000F1               _B2 000F2               _B3 000F3  
             _B4 000F4               _B5 000F5               _B6 000F6  
             _A8 000A0               _B7 000F7               _A9 000A1  
             _F0 000D5               _AC 000D6               l10 00190  
             l11 00277               l12 00274               l20 00225  
             l21 0024C               l13 001C8               l14 00277  
             l22 00253               _EA 000AF               l15 001D5  
             l16 0026C         _dispComm 00022               l18 0025B  
             l19 0024E               _P0 00080               _P1 00090  
             _P2 000A0               _P3 000B0               _IE 000A8  
             _T0 000B4               _T1 000B5               _ES 000AC  
             _CY 000D7               _IP 000B8               _RD 000B7  
             u10 00201               u11 001EC               u20 00201  
             _RI 00098               u21 00203               u30 00207  
             u31 00205               u40 0021E               _TI 00099  
             u41 0021C               u50 0025B               _PS 000BC  
             u19 00100               _OV 000D2               u60 0026C  
             u61 00269               _SP 00081               u70 00274  
       _dispInit 00125               _WR 000B6           _B_BITS 000F0  
            _A10 000A2              _A11 000A3              _A12 000A4  
            _A13 000A5              _A14 000A6              _A15 000A7  
            _AD0 00080              _AD1 00081              _AD2 00082  
            _AD3 00083              _AD4 00084              _AD5 00085  
            _AD6 00086              _AD7 00087              _ACC 000E0  
            _P00 00080              _P01 00081              _P10 00090  
            _P02 00082              _P11 00091              _P03 00083  
            _P20 000A0              _P12 00092              _P04 00084  
            _P21 000A1              _P13 00093              _P05 00085  
            _P30 000B0              _P22 000A2              _P14 00094  
            _P06 00086              _P31 000B1              _P23 000A3  
            _P15 00095              _P07 00087              _P32 000B2  
            _P24 000A4              _P16 00096              _P33 000B3  
            _P25 000A5              _P17 00097              _P34 000B4  
            _P26 000A6              _P35 000B5              _P27 000A7  
            _P36 000B6              _P37 000B7              _IE0 00089  
            _IE1 0008B              _ET0 000A9              _ET1 000AB  
            _EX0 000A8              _EX1 000AA              _DPH 00083  
            _DPL 00082              _IT0 00088              _IT1 0008A  
            _RB8 0009A              _TF0 0008D              _TB8 0009B  
            _TF1 0008F              _TH0 0008C              _TH1 0008D  
            _SM0 0009F              _SM1 0009E              _TL0 0008A  
            _SM2 0009D              _PT0 000B9              _TL1 0008B  
            _PT1 000BB              _RS0 000D3              _RS1 000D4  
            _REN 0009C              _PX0 000B8              _PX1 000BA  
            _TR0 0008C              _TR1 0008E              _RXD 000B0  
            _PSW 000D0              _TXD 000B1          _P0_BITS 00080  
        _P1_BITS 00090          _P2_BITS 000A0          _P3_BITS 000B0  
      _dispWrite 00156          _IE_BITS 000A8         _ACC_BITS 000E0  
        _IP_BITS 000B8             f1510 00127             f1511 00154  
           f1512 00000             f1530 00158             f1531 00163  
           f1540 00167             f1532 00000             f1541 00182  
           f1542 00000             f1480 00116             f1481 00123  
           f1570 00186             f1482 00000             f1571 00191  
           f1580 00196             f1572 00000             f1581 00278  
           f1582 00000             _ACC0 000E0             _ACC1 000E1  
           _ACC2 000E2             _ACC3 000E3             _ACC4 000E4  
           _ACC5 000E5             _ACC6 000E6             _ACC7 000E7  
  stack_internal 00001           _dispRS 00086           _dispRW 00087  
           _INT0 000B2             _INT1 000B3             _PCON 00087  
           _SCON 00098             _SBUF 00099             _TCON 00088  
           _TMOD 00089           _interr 00080             _main 00114  
           awmod 0008B           _strcpy 002EE           _strlen 000C3  
    _dispAnimate 00193         _PSW_BITS 000D0      _dispExecute 00184  
          _dispE 00085    _dispWriteLine 00165        _PCON_BITS 00087  
  ?a_dispAnimate 0002D  ?a_dispWriteLine 0002D        _SCON_BITS 00098  
      _TCON_BITS 00088        _TMOD_BITS 00089  
